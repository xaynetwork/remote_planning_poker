name: Build

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  rust-build:
    runs-on: hetzner-pm
    container:
      image: xaynetci/yellow:v6
    timeout-minutes: 45
    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # v2.2.0
        with:
          key: rust-build

      - name: Install Node.js and OpenSSL
        run: |
          curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
          apt-get install -y libssl-dev nodejs pkg-config

      - name: Install dependencies
        run: just install-deps

      - name: Build artifacts
        run: just build

      - name: Create archive
        run: tar -cvf remote_planning_poker.tar target/release/backend frontend/dist

      - name: Upload archive
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: remote_planning_poker
          retention-days: 1
          if-no-files-found: error
          path: remote_planning_poker.tar

  docker-build:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: [rust-build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1

      - name: Download artifacts
        id: artifacts
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
        with:
          name: remote_planning_poker

      - name: Untar files
        run: tar -xvf remote_planning_poker.tar

      - name: Create docker image
        run: |
          TAG="$(git rev-parse --short HEAD)"
          if [[ "${GITHUB_REF#refs/heads/}" != "" ]]; then
            #TAG="$(echo "branch-${GITHUB_REF#refs/heads/}" | tr '[:upper:]' '[:lower:]')"
            TAG="branch-${GITHUB_REF#refs/heads/}"
          fi
          IMAGE_NAME="xaynetci/xayn_estimation:$TAG"

          docker build -t "${IMAGE_NAME}" .
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: docker push
        id: docker-push
        run: docker push "${IMAGE_NAME}"
