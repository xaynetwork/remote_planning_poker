name: Build

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  rust-build:
    runs-on: hetzner-pm
    container:
      image: xaynetci/yellow:v2
    timeout-minutes: 45
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - uses: Swatinem/rust-cache@d12701459954fec471b2d34cdf7ea3374b026383 # v1
        with:
          key: rust-build

      - name: Install OpenSSL
        run: apt-get install -y openssl-dev

      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
          apt-get install -y nodejs

      - name: Install dependencies
        run: just install-deps

      - name: Build artifacts
        run: just build

      - name: Create archive
        run: tar -cvf estimation.tar target/release/backend frontend/dist

      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: estimation
          retention-days: 1
          if-no-files-found: error
          path: estimation.tar

  docker-build:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: [rust-build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifacts
        id: artifacts
        uses: actions/download-artifact@v3
        with:
          name: estimation

      - name: Untar files
        run: tar -xvf estimation.tar

      - name: Create docker image
        run: |
          TAG="$(git rev-parse --short HEAD)"
          if [[ "${GITHUB_REF#refs/heads/}" != "" ]]; then
            #TAG="$(echo "branch-${GITHUB_REF#refs/heads/}" | tr '[:upper:]' '[:lower:]')"
            TAG="branch-${GITHUB_REF#refs/heads/}"
          fi
          IMAGE_NAME="xaynetci/xayn_estimation:$TAG"

          docker build -t "${IMAGE_NAME}" .
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: "${{ secrets.DOCKERHUB_USERNAME }}"
      #     password: "${{ secrets.DOCKERHUB_TOKEN }}"

      # - name: docker push
      #   run: docker push "${IMAGE_NAME}"